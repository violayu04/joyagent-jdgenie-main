
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2025-08-08T16:22:56.070+08:00  INFO 83433 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : Starting GenieApplication v0.0.1-SNAPSHOT using Java 17.0.8 with PID 83433 (/Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/target/genie-backend-0.0.1-SNAPSHOT.jar started by yuhaiyan in /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend)
2025-08-08T16:22:56.072+08:00  INFO 83433 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : No active profile set, falling back to 1 default profile: "default"
2025-08-08T16:22:56.692+08:00  INFO 83433 --- [genie-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-08T16:22:56.730+08:00  INFO 83433 --- [genie-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 6 JPA repository interfaces.
2025-08-08T16:22:57.042+08:00  INFO 83433 --- [genie-backend] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-08-08T16:22:57.048+08:00  INFO 83433 --- [genie-backend] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-08T16:22:57.048+08:00  INFO 83433 --- [genie-backend] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-08-08T16:22:57.076+08:00  INFO 83433 --- [genie-backend] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-08T16:22:57.076+08:00  INFO 83433 --- [genie-backend] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 956 ms
2025-08-08T16:22:57.107+08:00  INFO 83433 --- [genie-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-08T16:22:57.348+08:00  INFO 83433 --- [genie-backend] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:file:./data/geniedb user=SA
2025-08-08T16:22:57.350+08:00  INFO 83433 --- [genie-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-08T16:22:57.358+08:00  INFO 83433 --- [genie-backend] [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:./data/geniedb'
2025-08-08T16:22:57.430+08:00  INFO 83433 --- [genie-backend] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-08T16:22:57.473+08:00  INFO 83433 --- [genie-backend] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-08T16:22:57.490+08:00  INFO 83433 --- [genie-backend] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-08T16:22:57.612+08:00  INFO 83433 --- [genie-backend] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-08T16:22:57.642+08:00  WARN 83433 --- [genie-backend] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-08T16:22:58.225+08:00  INFO 83433 --- [genie-backend] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-08T16:22:58.262+08:00  INFO 83433 --- [genie-backend] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-08T16:22:58.565+08:00  INFO 83433 --- [genie-backend] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-08T16:22:58.870+08:00  WARN 83433 --- [genie-backend] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-08T16:22:58.987+08:00  INFO 83433 --- [genie-backend] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f25176a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f8a0d7f, org.springframework.security.web.context.SecurityContextHolderFilter@17563b82, org.springframework.security.web.header.HeaderWriterFilter@5a637c4f, org.springframework.web.filter.CorsFilter@26df4e2f, org.springframework.security.web.authentication.logout.LogoutFilter@297840d7, com.jd.genie.security.JwtAuthenticationFilter@55a2ca5e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d0ef6dc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2936f48a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a4f3df4, org.springframework.security.web.session.SessionManagementFilter@530dd2d7, org.springframework.security.web.access.ExceptionTranslationFilter@684138c5, org.springframework.security.web.access.intercept.AuthorizationFilter@fcecc45]
2025-08-08T16:22:59.118+08:00  INFO 83433 --- [genie-backend] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-08-08T16:22:59.134+08:00  INFO 83433 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : Started GenieApplication in 3.318 seconds (process running for 3.61)
2025-08-08T16:22:59.623+08:00  INFO 83433 --- [genie-backend] [nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-08T16:22:59.623+08:00  INFO 83433 --- [genie-backend] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-08-08T16:22:59.623+08:00  INFO 83433 --- [genie-backend] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.document_id=?
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=? 
    order by
        dc1_0.chunk_index
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        documents 
    where
        id=?
Hibernate: 
    select
        count(d1_0.id) 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=?
2025-08-08T16:23:11.582+08:00  INFO 83433 --- [genie-backend] [nio-8080-exec-3] c.jd.genie.service.KnowledgeBaseService  : Document deleted successfully: ab29b950-6293-4ad0-9552-380888bac34b
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-08T16:23:22.634+08:00  INFO 83433 --- [genie-backend] [nio-8080-exec-7] c.jd.genie.service.KnowledgeBaseService  : Starting document upload: knowledgeBaseId=33, filename=1219842033.pdf, size=991154
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
        and d1_0.content_hash=?
Hibernate: 
    insert 
    into
        documents
        (content_hash, content_type, created_at, document_id, error_message, file_path, file_size, filename, knowledge_base_id, metadata, original_filename, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, ?, default)
2025-08-08T16:23:22.659+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Starting vectorization for document: a9b8927d-b295-40e0-974c-263ecead3c45 (application/pdf)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
2025-08-08T16:23:22.969+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Skipping OCR for digital native PDF: a9b8927d-b295-40e0-974c-263ecead3c45
2025-08-08T16:23:22.969+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Extracting content from file: 1219842033.pdf with content type: application/pdf
2025-08-08T16:23:22.969+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Extracting content from PDF file: uploads/knowledge-base/e7b6baed-3884-4522-b508-b233174a2763_1219842033.pdf
2025-08-08T16:23:23.158+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Successfully extracted 18374 characters from PDF: e7b6baed-3884-4522-b508-b233174a2763_1219842033.pdf
2025-08-08T16:23:23.159+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.s.SemanticTextChunkingService      : Starting semantic chunking with target size: 2000 characters, overlap: 200 characters, max table size: 4000
2025-08-08T16:23:23.174+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.s.SemanticTextChunkingService      : Semantic chunking completed: 11 chunks generated from 20 segments. Segment types: {PARAGRAPH=5, MULTI_LINE_CONTENT=15}
2025-08-08T16:23:23.174+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Document a9b8927d-b295-40e0-974c-263ecead3c45 split into 11 semantic chunks
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
2025-08-08T16:23:24.937+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 43a6c4fe-678c-42ad-b2ba-3f509e8fbd80 to file-based vector store
2025-08-08T16:23:24.938+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 94140d97-b1f5-4e86-9615-814aa2adedec to file-based vector store
2025-08-08T16:23:24.938+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 19ec5af4-b8d9-47a6-80c1-59e1ad8b6e0e to file-based vector store
2025-08-08T16:23:24.939+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 95dbb202-4fe8-4817-a5d4-5f891882901e to file-based vector store
2025-08-08T16:23:24.939+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document f644a75e-9fd1-467b-afe1-07c6d09c4442 to file-based vector store
2025-08-08T16:23:24.940+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 0c4d33a8-1c18-47b3-9818-eabaa9210abe to file-based vector store
2025-08-08T16:23:24.941+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 646db1c8-cd27-4d77-a8c9-8d1a33f8ebc5 to file-based vector store
2025-08-08T16:23:24.941+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document b1867181-c80d-420e-84ab-f3caadced7fe to file-based vector store
2025-08-08T16:23:24.942+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document db5bd71d-6604-4899-bee2-4ef338cf9cd4 to file-based vector store
2025-08-08T16:23:24.942+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 985a03a8-830d-43be-9f93-14d9acf6cd34 to file-based vector store
2025-08-08T16:23:24.943+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 5b76de8d-25e6-4b7c-992d-99e2b48bce22 to file-based vector store
2025-08-08T16:23:24.943+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Successfully added 11 out of 11 chunks to vector database for document: a9b8927d-b295-40e0-974c-263ecead3c45
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at,
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        documents d1_0 
    left join
        document_chunks c1_0 
            on d1_0.id=c1_0.document_id 
    where
        d1_0.id=?
Hibernate: 
    update
        documents 
    set
        content_hash=?,
        content_type=?,
        created_at=?,
        document_id=?,
        error_message=?,
        file_path=?,
        file_size=?,
        filename=?,
        knowledge_base_id=?,
        metadata=? format json,
        original_filename=?,
        status=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        count(d1_0.id) 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        d1_0.knowledge_base_id,
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        knowledge_bases kb1_0 
    left join
        documents d1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    where
        kb1_0.id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-08T16:23:24.962+08:00  INFO 83433 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Document vectorization completed successfully for: a9b8927d-b295-40e0-974c-263ecead3c45
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.document_id=?
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=? 
    order by
        dc1_0.chunk_index
