[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------< com.example:genie-backend >----------------------
[INFO] Building genie-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.3.2:clean (default-clean) @ genie-backend ---
[INFO] Deleting /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/target
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ genie-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ genie-backend ---
[INFO] Changes detected - recompiling the module! :source
[INFO] Compiling 128 source files with javac [debug release 17] to target/classes
[INFO] Annotation processing is enabled because one or more processors were found
  on the class path. A future release of javac may disable annotation processing
  unless at least one processor is specified by name (-processor), or a search
  path is specified (--processor-path, --processor-module-path), or annotation
  processing is enabled explicitly (-proc:only, -proc:full).
  Use -Xlint:-options to suppress this message.
  Use -proc:none to disable annotation processing.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/response/GptProcessResult.java:[17,20] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/response/GptProcessResult.java:[18,20] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/response/GptProcessResult.java:[23,20] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/response/GptProcessResult.java:[34,20] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/multi/EventResult.java:[20,27] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/multi/EventResult.java:[25,34] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/multi/EventResult.java:[54,27] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/multi/EventResult.java:[72,26] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/multi/EventResult.java:[82,33] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/multi/EventResult.java:[119,26] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/dto/AutoBotsResult.java:[16,20] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/dto/AutoBotsResult.java:[17,20] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/model/dto/AutoBotsResult.java:[22,20] @Builder will ignore the initializing expression entirely. If you want the initializing expression to serve as default, add @Builder.Default. If it is not supposed to be settable during building, make the field final.
[WARNING] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/config/SecurityConfig.java:[64,40] frameOptions() in org.springframework.security.config.annotation.web.configurers.HeadersConfigurer has been deprecated and marked for removal
[INFO] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/agent/llm/LLM.java: Some input files use or override a deprecated API.
[INFO] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/agent/llm/LLM.java: Recompile with -Xlint:deprecation for details.
[INFO] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/service/EmbeddingService.java: Some input files use unchecked or unsafe operations.
[INFO] /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/main/java/com/jd/genie/service/EmbeddingService.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] >>> spring-boot:3.2.2:run (default-cli) > test-compile @ genie-backend >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ genie-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ genie-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ genie-backend ---
[INFO] skip non existing resourceDirectory /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ genie-backend ---
[INFO] Changes detected - recompiling the module! :dependency
[INFO] Compiling 1 source file with javac [debug release 17] to target/test-classes
[INFO] Annotation processing is enabled because one or more processors were found
  on the class path. A future release of javac may disable annotation processing
  unless at least one processor is specified by name (-processor), or a search
  path is specified (--processor-path, --processor-module-path), or annotation
  processing is enabled explicitly (-proc:only, -proc:full).
  Use -Xlint:-options to suppress this message.
  Use -proc:none to disable annotation processing.
[INFO] 
[INFO] <<< spring-boot:3.2.2:run (default-cli) < test-compile @ genie-backend <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.2:run (default-cli) @ genie-backend ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2025-08-07T10:04:25.677+08:00  INFO 24965 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : Starting GenieApplication using Java 21.0.2 with PID 24965 (/Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/target/classes started by yuhaiyan in /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend)
2025-08-07T10:04:25.678+08:00  INFO 24965 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : No active profile set, falling back to 1 default profile: "default"
2025-08-07T10:04:25.930+08:00  INFO 24965 --- [genie-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-07T10:04:25.955+08:00  INFO 24965 --- [genie-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 6 JPA repository interfaces.
2025-08-07T10:04:26.144+08:00  INFO 24965 --- [genie-backend] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-08-07T10:04:26.148+08:00  INFO 24965 --- [genie-backend] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-07T10:04:26.148+08:00  INFO 24965 --- [genie-backend] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-08-07T10:04:26.165+08:00  INFO 24965 --- [genie-backend] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-07T10:04:26.165+08:00  INFO 24965 --- [genie-backend] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 473 ms
2025-08-07T10:04:26.178+08:00  INFO 24965 --- [genie-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-07T10:04:26.265+08:00  INFO 24965 --- [genie-backend] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:file:./data/geniedb user=SA
2025-08-07T10:04:26.265+08:00  INFO 24965 --- [genie-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-07T10:04:26.270+08:00  INFO 24965 --- [genie-backend] [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:./data/geniedb'
2025-08-07T10:04:26.306+08:00  INFO 24965 --- [genie-backend] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-07T10:04:26.323+08:00  INFO 24965 --- [genie-backend] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-07T10:04:26.333+08:00  INFO 24965 --- [genie-backend] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-07T10:04:26.404+08:00  INFO 24965 --- [genie-backend] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-07T10:04:26.419+08:00  WARN 24965 --- [genie-backend] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-07T10:04:26.759+08:00  INFO 24965 --- [genie-backend] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-07T10:04:26.782+08:00  INFO 24965 --- [genie-backend] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-07T10:04:27.056+08:00  INFO 24965 --- [genie-backend] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-07T10:04:27.287+08:00  WARN 24965 --- [genie-backend] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-07T10:04:27.376+08:00  INFO 24965 --- [genie-backend] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@410185ec, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f3b4c9a, org.springframework.security.web.context.SecurityContextHolderFilter@9e7d82e, org.springframework.security.web.header.HeaderWriterFilter@5d965dbd, org.springframework.web.filter.CorsFilter@bfe49f9, org.springframework.security.web.authentication.logout.LogoutFilter@724d4c0a, com.jd.genie.security.JwtAuthenticationFilter@37ad818e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12c66345, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24bf95ec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@424632a, org.springframework.security.web.session.SessionManagementFilter@614427b2, org.springframework.security.web.access.ExceptionTranslationFilter@3e6b8b27, org.springframework.security.web.access.intercept.AuthorizationFilter@62c41ad]
2025-08-07T10:04:27.480+08:00  INFO 24965 --- [genie-backend] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-08-07T10:04:27.484+08:00  INFO 24965 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : Started GenieApplication in 1.937 seconds (process running for 2.05)
2025-08-07T10:04:30.859+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-07T10:04:30.859+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-08-07T10:04:30.860+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
2025-08-07T10:05:21.187+08:00 ERROR 24965 --- [genie-backend] [nio-8080-exec-9] c.j.g.security.JwtAuthenticationFilter   : JWT token parsing failed

io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:399) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at com.jd.genie.security.JwtUtil.extractAllClaims(JwtUtil.java:45) ~[classes/:na]
	at com.jd.genie.security.JwtUtil.extractClaim(JwtUtil.java:37) ~[classes/:na]
	at com.jd.genie.security.JwtUtil.extractUsername(JwtUtil.java:29) ~[classes/:na]
	at com.jd.genie.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225) ~[spring-security-config-6.2.1.jar:6.2.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.3.jar:6.1.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.3.jar:6.1.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.18.jar:10.1.18]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:05:36.088+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-1] com.jd.genie.controller.AuthController   : Login failed for user: test1
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:05:56.371+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-3] com.jd.genie.controller.AuthController   : Login failed for user: testuser
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (created_at, email, is_active, last_login, password, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:06:07.220+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-4] com.jd.genie.controller.AuthController   : User registered successfully: testuser2
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.name=? 
        and kb1_0.is_active=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        knowledge_bases
        (created_at, description, document_count, is_active, name, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-07T10:06:53.776+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-8] c.jd.genie.service.KnowledgeBaseService  : Knowledge base updated successfully: 34 -> name: 更新后的知识库名称, description: null
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-07T10:07:13.891+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-1] c.jd.genie.service.KnowledgeBaseService  : Knowledge base updated successfully: 1 -> name: 知识库2, description: null
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-07T10:09:28.385+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-8] c.jd.genie.service.KnowledgeBaseService  : Knowledge base updated successfully: 1 -> name: 知识库1, description: null
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:20:08.520+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:22:07.342+08:00  WARN 24965 --- [genie-backend] [io-8080-exec-10] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    update
        chat_sessions 
    set
        created_at=?,
        is_active=?,
        session_id=?,
        title=?,
        updated_at=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:22:18.377+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-9] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:22:22.797+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:22:24.335+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-4] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:22:26.451+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-6] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:22:38.045+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:22:41.396+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-4] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
2025-08-07T10:23:28.949+08:00  WARN 24965 --- [genie-backend] [io-8080-exec-10] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:23:31.071+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:23:32.555+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-4] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    update
        chat_sessions 
    set
        created_at=?,
        is_active=?,
        session_id=?,
        title=?,
        updated_at=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-07T10:23:51.725+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-2] c.jd.genie.service.KnowledgeBaseService  : Starting document upload: knowledgeBaseId=1, filename=财报.pdf, size=5484519
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
        and d1_0.content_hash=?
Hibernate: 
    insert 
    into
        documents
        (content_hash, content_type, created_at, document_id, error_message, file_path, file_size, filename, knowledge_base_id, metadata, original_filename, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, ?, default)
2025-08-07T10:23:51.752+08:00  INFO 24965 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Starting vectorization for document: be85403b-dbf0-444d-81ce-880db510216e
2025-08-07T10:23:51.752+08:00  INFO 24965 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Extracting content from file: 财报.pdf with content type: application/pdf
2025-08-07T10:23:51.752+08:00  INFO 24965 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Document be85403b-dbf0-444d-81ce-880db510216e split into 1 chunks
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
2025-08-07T10:23:52.204+08:00  INFO 24965 --- [genie-backend] [onPool-worker-1] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 8788982a-bc9d-453c-a471-1d060269cc5d to file-based vector store
2025-08-07T10:23:52.204+08:00  INFO 24965 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Successfully added 1 out of 1 chunks to vector database for document: be85403b-dbf0-444d-81ce-880db510216e
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at,
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        documents d1_0 
    left join
        document_chunks c1_0 
            on d1_0.id=c1_0.document_id 
    where
        d1_0.id=?
Hibernate: 
    update
        documents 
    set
        content_hash=?,
        content_type=?,
        created_at=?,
        document_id=?,
        error_message=?,
        file_path=?,
        file_size=?,
        filename=?,
        knowledge_base_id=?,
        metadata=? format json,
        original_filename=?,
        status=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        count(d1_0.id) 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        d1_0.knowledge_base_id,
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        knowledge_bases kb1_0 
    left join
        documents d1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    where
        kb1_0.id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-07T10:23:52.230+08:00  INFO 24965 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Document vectorization completed successfully for: be85403b-dbf0-444d-81ce-880db510216e
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.name=? 
        and kb1_0.is_active=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        knowledge_bases
        (created_at, description, document_count, is_active, name, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
2025-08-07T10:32:19.932+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-07T10:32:23.573+08:00  WARN 24965 --- [genie-backend] [nio-8080-exec-4] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-07T10:33:04.084+08:00  INFO 24965 --- [genie-backend] [nio-8080-exec-8] c.jd.genie.service.KnowledgeBaseService  : Starting document upload: knowledgeBaseId=35, filename=财报.pdf, size=5484519
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
        and d1_0.content_hash=?
Hibernate: 
    insert 
    into
        documents
        (content_hash, content_type, created_at, document_id, error_message, file_path, file_size, filename, knowledge_base_id, metadata, original_filename, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, ?, default)
2025-08-07T10:33:04.104+08:00  INFO 24965 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Starting vectorization for document: 62f59e7e-f1e7-41d2-b1ab-46c64569eaf5
2025-08-07T10:33:04.104+08:00  INFO 24965 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Extracting content from file: 财报.pdf with content type: application/pdf
2025-08-07T10:33:04.104+08:00  INFO 24965 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Document 62f59e7e-f1e7-41d2-b1ab-46c64569eaf5 split into 1 chunks
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
2025-08-07T10:33:04.548+08:00  INFO 24965 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 662b0171-c0cc-445f-ada4-26d61d82b801 to file-based vector store
2025-08-07T10:33:04.548+08:00  INFO 24965 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Successfully added 1 out of 1 chunks to vector database for document: 62f59e7e-f1e7-41d2-b1ab-46c64569eaf5
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at,
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        documents d1_0 
    left join
        document_chunks c1_0 
            on d1_0.id=c1_0.document_id 
    where
        d1_0.id=?
Hibernate: 
    update
        documents 
    set
        content_hash=?,
        content_type=?,
        created_at=?,
        document_id=?,
        error_message=?,
        file_path=?,
        file_size=?,
        filename=?,
        knowledge_base_id=?,
        metadata=? format json,
        original_filename=?,
        status=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        count(d1_0.id) 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        d1_0.knowledge_base_id,
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        knowledge_bases kb1_0 
    left join
        documents d1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    where
        kb1_0.id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-07T10:33:04.555+08:00  INFO 24965 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Document vectorization completed successfully for: 62f59e7e-f1e7-41d2-b1ab-46c64569eaf5
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
