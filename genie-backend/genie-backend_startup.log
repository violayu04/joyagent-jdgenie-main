
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2025-08-09T20:41:59.041+08:00  INFO 7942 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : Starting GenieApplication v0.0.1-SNAPSHOT using Java 17.0.8 with PID 7942 (/Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend/target/genie-backend-0.0.1-SNAPSHOT.jar started by yuhaiyan in /Users/yuhaiyan/Desktop/joyagent-jdgenie-main/genie-backend)
2025-08-09T20:41:59.047+08:00  INFO 7942 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : No active profile set, falling back to 1 default profile: "default"
2025-08-09T20:41:59.521+08:00  INFO 7942 --- [genie-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-09T20:41:59.552+08:00  INFO 7942 --- [genie-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28 ms. Found 6 JPA repository interfaces.
2025-08-09T20:41:59.780+08:00  INFO 7942 --- [genie-backend] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-08-09T20:41:59.786+08:00  INFO 7942 --- [genie-backend] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-09T20:41:59.786+08:00  INFO 7942 --- [genie-backend] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-08-09T20:41:59.809+08:00  INFO 7942 --- [genie-backend] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-09T20:41:59.809+08:00  INFO 7942 --- [genie-backend] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 710 ms
2025-08-09T20:41:59.829+08:00  INFO 7942 --- [genie-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-09T20:41:59.963+08:00  INFO 7942 --- [genie-backend] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:file:./data/geniedb user=SA
2025-08-09T20:41:59.964+08:00  INFO 7942 --- [genie-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-09T20:41:59.970+08:00  INFO 7942 --- [genie-backend] [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:./data/geniedb'
2025-08-09T20:42:00.015+08:00  INFO 7942 --- [genie-backend] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-09T20:42:00.055+08:00  INFO 7942 --- [genie-backend] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-09T20:42:00.073+08:00  INFO 7942 --- [genie-backend] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-09T20:42:00.201+08:00  INFO 7942 --- [genie-backend] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-09T20:42:00.223+08:00  WARN 7942 --- [genie-backend] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-09T20:42:00.708+08:00  INFO 7942 --- [genie-backend] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-09T20:42:00.736+08:00  INFO 7942 --- [genie-backend] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-09T20:42:01.024+08:00  INFO 7942 --- [genie-backend] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-09T20:42:01.342+08:00  WARN 7942 --- [genie-backend] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-09T20:42:01.449+08:00  INFO 7942 --- [genie-backend] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@d594a5a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77199818, org.springframework.security.web.context.SecurityContextHolderFilter@27ae8ce3, org.springframework.security.web.header.HeaderWriterFilter@27e713d4, org.springframework.web.filter.CorsFilter@72216f0b, org.springframework.security.web.authentication.logout.LogoutFilter@2c8c897e, com.jd.genie.security.JwtAuthenticationFilter@949165f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@597050fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7511e348, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3fa13835, org.springframework.security.web.session.SessionManagementFilter@f1a5005, org.springframework.security.web.access.ExceptionTranslationFilter@616549c, org.springframework.security.web.access.intercept.AuthorizationFilter@4298e4b4]
2025-08-09T20:42:01.570+08:00  INFO 7942 --- [genie-backend] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-08-09T20:42:01.578+08:00  INFO 7942 --- [genie-backend] [           main] com.jd.genie.GenieApplication            : Started GenieApplication in 2.809 seconds (process running for 3.063)
2025-08-09T20:42:02.617+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-09T20:42:02.617+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-08-09T20:42:02.617+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-09T21:02:26.225+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-4] c.jd.genie.service.KnowledgeBaseService  : Starting document upload: knowledgeBaseId=1, filename=财报.pdf, size=5484519
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
        and d1_0.content_hash=?
Hibernate: 
    insert 
    into
        documents
        (content_hash, content_type, created_at, document_id, error_message, file_path, file_size, filename, knowledge_base_id, metadata, original_filename, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, ?, default)
2025-08-09T21:02:26.266+08:00  INFO 7942 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Starting vectorization for document: 16c2f278-570a-42a9-96e0-cf3222c6e7a5 (application/pdf)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
2025-08-09T21:02:26.837+08:00  INFO 7942 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Skipping OCR for digital native PDF: 16c2f278-570a-42a9-96e0-cf3222c6e7a5
2025-08-09T21:02:26.838+08:00  INFO 7942 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Extracting content from file: 财报.pdf with content type: application/pdf
2025-08-09T21:02:26.838+08:00  INFO 7942 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Extracting content from PDF file: uploads/knowledge-base/06ed6b90-2169-4d53-bf1b-b7f0a1df5425_财报.pdf
2025-08-09T21:02:27.657+08:00  WARN 7942 --- [genie-backend] [onPool-worker-1] org.apache.fontbox.ttf.CmapSubtable      : Format 14 cmap table is not supported and will be ignored
2025-08-09T21:02:27.845+08:00  INFO 7942 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Successfully extracted 301594 characters from PDF: 06ed6b90-2169-4d53-bf1b-b7f0a1df5425_财报.pdf
2025-08-09T21:02:27.848+08:00  INFO 7942 --- [genie-backend] [onPool-worker-1] c.j.g.s.SemanticTextChunkingService      : Starting semantic chunking with target size: 2000 characters, overlap: 200 characters, max table size: 4000
2025-08-09T21:02:27.964+08:00  INFO 7942 --- [genie-backend] [onPool-worker-1] c.j.g.s.SemanticTextChunkingService      : Semantic chunking completed: 158 chunks generated from 332 segments. Segment types: {TITLE=32, PARAGRAPH=92, MULTI_LINE_CONTENT=206, LIST_GROUP=2}
2025-08-09T21:02:27.964+08:00  INFO 7942 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Document 16c2f278-570a-42a9-96e0-cf3222c6e7a5 split into 158 semantic chunks
2025-08-09T21:02:27.976+08:00 ERROR 7942 --- [genie-backend] [onPool-worker-1] com.jd.genie.service.EmbeddingService    : Ollama embedding API error

org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:11434/api/embeddings": Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:529) ~[spring-web-6.1.3.jar!/:6.1.3]
	at com.jd.genie.service.EmbeddingService.generateOllamaEmbedding(EmbeddingService.java:139) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.EmbeddingService.generateEmbedding(EmbeddingService.java:39) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.KnowledgeBaseService.processDocumentVectorization(KnowledgeBaseService.java:208) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.KnowledgeBaseService.lambda$processDocumentAsync$1(KnowledgeBaseService.java:152) ~[!/:0.0.1-SNAPSHOT]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165) ~[na:na]
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:178) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:534) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:639) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:282) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:387) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:409) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1309) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1287) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1128) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1057) ~[na:na]
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879) ~[spring-web-6.1.3.jar!/:6.1.3]
	... 13 common frames omitted

2025-08-09T21:02:27.977+08:00 ERROR 7942 --- [genie-backend] [onPool-worker-1] com.jd.genie.service.EmbeddingService    : Failed to generate embedding for text: 2024 年年度报告

目录  公司简介  主要财务数据及指标  董事长致辞  经营业绩回顾及展望  管理层讨论与分析  公司治理、环境和社会  重要事项  关联交易  董事会报告  监事会报告  股

java.lang.RuntimeException: Ollama embedding failed
	at com.jd.genie.service.EmbeddingService.generateOllamaEmbedding(EmbeddingService.java:153) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.EmbeddingService.generateEmbedding(EmbeddingService.java:39) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.KnowledgeBaseService.processDocumentVectorization(KnowledgeBaseService.java:208) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.KnowledgeBaseService.lambda$processDocumentAsync$1(KnowledgeBaseService.java:152) ~[!/:0.0.1-SNAPSHOT]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165) ~[na:na]
Caused by: org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:11434/api/embeddings": Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:529) ~[spring-web-6.1.3.jar!/:6.1.3]
	at com.jd.genie.service.EmbeddingService.generateOllamaEmbedding(EmbeddingService.java:139) ~[!/:0.0.1-SNAPSHOT]
	... 10 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:178) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:534) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:639) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:282) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:387) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:409) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1309) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1287) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1128) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1057) ~[na:na]
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879) ~[spring-web-6.1.3.jar!/:6.1.3]
	... 13 common frames omitted

2025-08-09T21:02:27.977+08:00 ERROR 7942 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Failed to vectorize document: 16c2f278-570a-42a9-96e0-cf3222c6e7a5

java.lang.RuntimeException: Failed to generate embedding
	at com.jd.genie.service.EmbeddingService.generateEmbedding(EmbeddingService.java:47) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.KnowledgeBaseService.processDocumentVectorization(KnowledgeBaseService.java:208) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.KnowledgeBaseService.lambda$processDocumentAsync$1(KnowledgeBaseService.java:152) ~[!/:0.0.1-SNAPSHOT]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165) ~[na:na]
Caused by: java.lang.RuntimeException: Ollama embedding failed
	at com.jd.genie.service.EmbeddingService.generateOllamaEmbedding(EmbeddingService.java:153) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.EmbeddingService.generateEmbedding(EmbeddingService.java:39) ~[!/:0.0.1-SNAPSHOT]
	... 9 common frames omitted
Caused by: org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:11434/api/embeddings": Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:529) ~[spring-web-6.1.3.jar!/:6.1.3]
	at com.jd.genie.service.EmbeddingService.generateOllamaEmbedding(EmbeddingService.java:139) ~[!/:0.0.1-SNAPSHOT]
	... 10 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:178) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:534) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:639) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:282) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:387) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:409) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1309) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1287) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1128) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1057) ~[na:na]
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879) ~[spring-web-6.1.3.jar!/:6.1.3]
	... 13 common frames omitted

Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at,
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        documents d1_0 
    left join
        document_chunks c1_0 
            on d1_0.id=c1_0.document_id 
    where
        d1_0.id=?
Hibernate: 
    update
        documents 
    set
        content_hash=?,
        content_type=?,
        created_at=?,
        document_id=?,
        error_message=?,
        file_path=?,
        file_size=?,
        filename=?,
        knowledge_base_id=?,
        metadata=? format json,
        original_filename=?,
        status=?,
        updated_at=? 
    where
        id=?
2025-08-09T21:02:27.989+08:00 ERROR 7942 --- [genie-backend] [onPool-worker-1] c.jd.genie.service.KnowledgeBaseService  : Failed to process document vectorization for document: 16c2f278-570a-42a9-96e0-cf3222c6e7a5

java.lang.RuntimeException: Failed to generate embedding
	at com.jd.genie.service.EmbeddingService.generateEmbedding(EmbeddingService.java:47) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.KnowledgeBaseService.processDocumentVectorization(KnowledgeBaseService.java:208) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.KnowledgeBaseService.lambda$processDocumentAsync$1(KnowledgeBaseService.java:152) ~[!/:0.0.1-SNAPSHOT]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622) ~[na:na]
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165) ~[na:na]
Caused by: java.lang.RuntimeException: Ollama embedding failed
	at com.jd.genie.service.EmbeddingService.generateOllamaEmbedding(EmbeddingService.java:153) ~[!/:0.0.1-SNAPSHOT]
	at com.jd.genie.service.EmbeddingService.generateEmbedding(EmbeddingService.java:39) ~[!/:0.0.1-SNAPSHOT]
	... 9 common frames omitted
Caused by: org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:11434/api/embeddings": Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:529) ~[spring-web-6.1.3.jar!/:6.1.3]
	at com.jd.genie.service.EmbeddingService.generateOllamaEmbedding(EmbeddingService.java:139) ~[!/:0.0.1-SNAPSHOT]
	... 10 common frames omitted
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:178) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:534) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:639) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:282) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:387) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:409) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1309) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1287) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1128) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1057) ~[na:na]
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66) ~[spring-web-6.1.3.jar!/:6.1.3]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879) ~[spring-web-6.1.3.jar!/:6.1.3]
	... 13 common frames omitted

Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at,
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        documents d1_0 
    left join
        document_chunks c1_0 
            on d1_0.id=c1_0.document_id 
    where
        d1_0.id=?
Hibernate: 
    update
        documents 
    set
        content_hash=?,
        content_type=?,
        created_at=?,
        document_id=?,
        error_message=?,
        file_path=?,
        file_size=?,
        filename=?,
        knowledge_base_id=?,
        metadata=? format json,
        original_filename=?,
        status=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.document_id=?
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=? 
    order by
        dc1_0.chunk_index
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    delete 
    from
        documents 
    where
        id=?
Hibernate: 
    select
        count(d1_0.id) 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=?
2025-08-09T21:02:48.459+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-1] c.jd.genie.service.KnowledgeBaseService  : Document deleted successfully: 16c2f278-570a-42a9-96e0-cf3222c6e7a5
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-09T21:06:23.058+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-8] c.jd.genie.service.KnowledgeBaseService  : Starting document upload: knowledgeBaseId=1, filename=财报.pdf, size=5484519
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
        and d1_0.content_hash=?
Hibernate: 
    insert 
    into
        documents
        (content_hash, content_type, created_at, document_id, error_message, file_path, file_size, filename, knowledge_base_id, metadata, original_filename, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, ?, default)
2025-08-09T21:06:23.081+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Starting vectorization for document: 794cf47e-0195-400e-8e2f-ecb7d60eca41 (application/pdf)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
2025-08-09T21:06:23.264+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Skipping OCR for digital native PDF: 794cf47e-0195-400e-8e2f-ecb7d60eca41
2025-08-09T21:06:23.264+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Extracting content from file: 财报.pdf with content type: application/pdf
2025-08-09T21:06:23.264+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Extracting content from PDF file: uploads/knowledge-base/d351fb9c-a564-4830-9737-8308b00fe962_财报.pdf
2025-08-09T21:06:23.828+08:00  WARN 7942 --- [genie-backend] [onPool-worker-2] org.apache.fontbox.ttf.CmapSubtable      : Format 14 cmap table is not supported and will be ignored
2025-08-09T21:06:23.975+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Successfully extracted 301594 characters from PDF: d351fb9c-a564-4830-9737-8308b00fe962_财报.pdf
2025-08-09T21:06:23.977+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.s.SemanticTextChunkingService      : Starting semantic chunking with target size: 2000 characters, overlap: 200 characters, max table size: 4000
2025-08-09T21:06:24.028+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.s.SemanticTextChunkingService      : Semantic chunking completed: 158 chunks generated from 332 segments. Segment types: {TITLE=32, PARAGRAPH=92, MULTI_LINE_CONTENT=206, LIST_GROUP=2}
2025-08-09T21:06:24.028+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Document 794cf47e-0195-400e-8e2f-ecb7d60eca41 split into 158 semantic chunks
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
2025-08-09T21:06:50.697+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 7256117d-39de-4942-91c7-208aeea7626a to file-based vector store
2025-08-09T21:06:50.698+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 076159f1-0a1a-430f-8cee-3325b7c6222f to file-based vector store
2025-08-09T21:06:50.698+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document bd16afbb-7440-43ae-bd21-d57ec8e89a5b to file-based vector store
2025-08-09T21:06:50.698+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 1e103a69-833a-4dad-aa57-5f46a667c2bb to file-based vector store
2025-08-09T21:06:50.699+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 6335c550-845c-45c7-934c-b63b8717293f to file-based vector store
2025-08-09T21:06:50.699+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d8cde0da-0333-4c7e-8de7-742fd511449e to file-based vector store
2025-08-09T21:06:50.700+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 0a5a2380-9600-4c91-8387-2b9cfb713c8b to file-based vector store
2025-08-09T21:06:50.700+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 11d798e2-f25e-4e36-8da1-023d68b343f3 to file-based vector store
2025-08-09T21:06:50.701+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 76dd57c9-8e4d-4b36-b986-e11d83b2baa5 to file-based vector store
2025-08-09T21:06:50.701+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 02181b95-9b49-4364-9fed-324a79f4dd0c to file-based vector store
2025-08-09T21:06:50.701+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 34e82481-a40d-4732-8427-2032ca2ebdb1 to file-based vector store
2025-08-09T21:06:50.702+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 0ea058b5-58a4-41ec-a76c-c2c587d6d681 to file-based vector store
2025-08-09T21:06:50.702+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 4c3986f7-12b4-483c-9c8a-1a88e50e4fac to file-based vector store
2025-08-09T21:06:50.703+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 35d3dbf6-b28b-4037-a29a-d496358c5646 to file-based vector store
2025-08-09T21:06:50.703+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 228c305d-fe4f-4fdd-bee8-4bc6f1fe7425 to file-based vector store
2025-08-09T21:06:50.704+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 888fe4c0-e330-43bc-b29c-a1f2f4be5127 to file-based vector store
2025-08-09T21:06:50.704+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document cba809ac-9187-4c8f-adb2-bd47fe3d76aa to file-based vector store
2025-08-09T21:06:50.705+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 9efc7f2a-fba4-428e-9679-df3c9dd08573 to file-based vector store
2025-08-09T21:06:50.705+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document ad13f29c-d04e-47cd-aac4-fbe8f3c1b084 to file-based vector store
2025-08-09T21:06:50.705+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document a56785bf-02b2-4307-b8a3-a02af652fa0a to file-based vector store
2025-08-09T21:06:50.706+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 719f32fa-f5f1-4741-b921-9a477fea83c3 to file-based vector store
2025-08-09T21:06:50.707+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document ececcaa4-1ef6-4b21-8f30-89d2795f716b to file-based vector store
2025-08-09T21:06:50.708+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 5e38027a-ce7c-48ca-8532-9bac49533533 to file-based vector store
2025-08-09T21:06:50.708+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 4e6a6b69-c4eb-4251-afcb-c61e3e86ea7e to file-based vector store
2025-08-09T21:06:50.708+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document a1386b23-a788-4eb0-8722-013fc93c8470 to file-based vector store
2025-08-09T21:06:50.709+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document ff89e696-a2af-4631-ab89-67b8d71130ef to file-based vector store
2025-08-09T21:06:50.709+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2d37d3ec-9c4d-466c-b13f-e81ebf9571bb to file-based vector store
2025-08-09T21:06:50.709+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document b4f96347-7235-41ad-952a-f40a9b6aa7f7 to file-based vector store
2025-08-09T21:06:50.710+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 9ab95efa-f9e1-4aab-bfb2-87e67a70e2a7 to file-based vector store
2025-08-09T21:06:50.710+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document dbe04837-2ee7-43ea-aefe-5da5efacec22 to file-based vector store
2025-08-09T21:06:50.711+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 89d663a4-4cdb-47c2-9eef-9e6b83e9323e to file-based vector store
2025-08-09T21:06:50.711+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 34720a44-588d-4667-9c67-3adb785cc025 to file-based vector store
2025-08-09T21:06:50.711+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document af4ae41a-ff6f-4be2-b1cf-6b0489fc30ff to file-based vector store
2025-08-09T21:06:50.712+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document a0521f2b-ac1f-4e19-90b0-bc04cda4170a to file-based vector store
2025-08-09T21:06:50.712+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 6c75d16c-a26b-4380-9fac-e5cfc1db2b80 to file-based vector store
2025-08-09T21:06:50.713+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 7b3d95c5-c953-4682-9f67-242265794c36 to file-based vector store
2025-08-09T21:06:50.713+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 3d226cbb-c2dc-46a5-9a6e-704b557f0f94 to file-based vector store
2025-08-09T21:06:50.714+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 1bdcb996-b0ad-4bc0-8c31-843078e81f1f to file-based vector store
2025-08-09T21:06:50.715+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d275c42a-8cfb-4530-bca8-13287bf73bf8 to file-based vector store
2025-08-09T21:06:50.716+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document f20b1558-e2fd-4dbb-bd74-3744facd5e38 to file-based vector store
2025-08-09T21:06:50.716+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 9e3fa187-66c3-4420-8b80-a3f6b495abe2 to file-based vector store
2025-08-09T21:06:50.717+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 6e77a142-e5c9-43c2-a655-10fa9e124316 to file-based vector store
2025-08-09T21:06:50.717+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document deeff2bb-2ece-45a3-abc0-5e025bd9207d to file-based vector store
2025-08-09T21:06:50.717+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2f042516-f444-420d-be86-c1c4cf3ea276 to file-based vector store
2025-08-09T21:06:50.717+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2b240229-9e15-41ca-9e3d-2a015e8df4bc to file-based vector store
2025-08-09T21:06:50.718+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 5ccd5633-e3b4-4547-9bd8-b56d09f1ac88 to file-based vector store
2025-08-09T21:06:50.718+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 61c8deae-f162-4d40-8e75-50e60bffa5fc to file-based vector store
2025-08-09T21:06:50.719+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document a96227bf-4bad-426a-9da1-10d784be06d9 to file-based vector store
2025-08-09T21:06:50.719+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2409338c-40df-4fba-b60f-e4357103de74 to file-based vector store
2025-08-09T21:06:50.719+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 1349d2e6-3959-40d0-b9fb-f8418207a840 to file-based vector store
2025-08-09T21:06:50.720+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 64661d2c-6d09-4bcc-9837-e69a8c075e7a to file-based vector store
2025-08-09T21:06:50.720+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 47b61bb8-2075-4e30-a99d-8f4827716414 to file-based vector store
2025-08-09T21:06:50.720+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document aa99d657-9cc1-410f-a905-12cdc687f5fc to file-based vector store
2025-08-09T21:06:50.721+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document a6eac1ad-c84e-486a-916b-93fadbdbbfac to file-based vector store
2025-08-09T21:06:50.721+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document dec466ce-7392-4d5a-954b-6198a49c0dfa to file-based vector store
2025-08-09T21:06:50.721+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 4d9f34d0-211f-4a8b-b37a-35f8f6ae4586 to file-based vector store
2025-08-09T21:06:50.722+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document c1ab81ec-0fd6-4b1c-a1c2-7395f59f474a to file-based vector store
2025-08-09T21:06:50.722+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 593e2068-7b11-4d3b-8429-53589bbdff64 to file-based vector store
2025-08-09T21:06:50.723+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 3f6f0cbd-faee-49bc-862b-fb45978403ba to file-based vector store
2025-08-09T21:06:50.723+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d0adf0c0-48f9-4724-8b63-c8e2cdc2ca4b to file-based vector store
2025-08-09T21:06:50.723+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 8e88199d-7a24-446f-b544-8b8bfeb5728b to file-based vector store
2025-08-09T21:06:50.724+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 04540dd0-442a-4729-ba85-0c19919c4172 to file-based vector store
2025-08-09T21:06:50.724+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 86a9638a-7823-4a48-ba34-0e6243518ce7 to file-based vector store
2025-08-09T21:06:50.724+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document bee71fc1-c88c-4e6f-8083-d8370699c3f2 to file-based vector store
2025-08-09T21:06:50.725+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document bb335c6c-82f2-4f26-934c-d79cd27a98ad to file-based vector store
2025-08-09T21:06:50.725+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document bb5a1fe7-0129-40a4-b15f-416933d81293 to file-based vector store
2025-08-09T21:06:50.725+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 14c2e843-17af-4e43-a523-0142cb84036e to file-based vector store
2025-08-09T21:06:50.725+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 58518b81-b78e-44e0-8dd3-8410712da1b3 to file-based vector store
2025-08-09T21:06:50.726+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 33547af2-ea77-4304-8c6b-fc3b98f19d1b to file-based vector store
2025-08-09T21:06:50.726+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 631dd34d-2c4f-44c5-bec8-a8fcaaac713b to file-based vector store
2025-08-09T21:06:50.726+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2dc04957-f9b4-477b-ac74-98f3455fefe1 to file-based vector store
2025-08-09T21:06:50.727+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d462edde-c17e-4e94-bb8b-fd2cca7bf178 to file-based vector store
2025-08-09T21:06:50.727+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 770ad4c8-48e1-4f2c-9ca6-778b31869d9b to file-based vector store
2025-08-09T21:06:50.727+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 83976420-f841-4532-a483-a1dd11019a1d to file-based vector store
2025-08-09T21:06:50.728+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d1c7f102-cf15-41a5-9e39-e473eca2378b to file-based vector store
2025-08-09T21:06:50.728+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d4861474-7297-4533-a211-4695347730e4 to file-based vector store
2025-08-09T21:06:50.728+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document ac57c918-8b88-4144-a65e-68899d05dd48 to file-based vector store
2025-08-09T21:06:50.729+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document e959040a-722b-441f-b35c-64e8c3601adb to file-based vector store
2025-08-09T21:06:50.729+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 7a62f4ca-6bef-4ff5-bc7a-8978c24901ec to file-based vector store
2025-08-09T21:06:50.729+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document c05c0065-c060-47c9-9884-b98ffc6f2073 to file-based vector store
2025-08-09T21:06:50.730+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 1a40c45b-fbc0-4ecf-ac6c-f8cd315873d3 to file-based vector store
2025-08-09T21:06:50.730+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document c6523c47-eb65-4f06-9ec8-2fd30b25e299 to file-based vector store
2025-08-09T21:06:50.730+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document f0762398-8af7-4b2c-a9e0-7ad748821860 to file-based vector store
2025-08-09T21:06:50.730+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 60619bd5-84d8-4356-8a6b-84bbc019042d to file-based vector store
2025-08-09T21:06:50.731+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document e244076b-c6c5-4e4b-bf5f-69beadc46623 to file-based vector store
2025-08-09T21:06:50.731+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 1307e605-b5b4-4976-a2da-8351feb6498d to file-based vector store
2025-08-09T21:06:50.731+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 9a786828-46ca-498f-8010-63067d62102a to file-based vector store
2025-08-09T21:06:50.731+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 4359914d-aef8-4537-9aa9-461193b3640d to file-based vector store
2025-08-09T21:06:50.732+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 91bb49cd-d838-4ced-9caf-3de9e18cb115 to file-based vector store
2025-08-09T21:06:50.732+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 5e4ceff0-d67f-409d-bb13-2ec9b2af1b9c to file-based vector store
2025-08-09T21:06:50.733+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document ca6c3a2a-188f-4563-943d-8ae6f04c4acb to file-based vector store
2025-08-09T21:06:50.733+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document a046636b-7567-4f8b-8c0d-367cb195d3f7 to file-based vector store
2025-08-09T21:06:50.733+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d2df6750-bc08-4176-a51a-e3076cd30de6 to file-based vector store
2025-08-09T21:06:50.733+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 7f3d0111-2b65-4115-82be-534c3ae3c0f5 to file-based vector store
2025-08-09T21:06:50.734+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 8bdc096d-d9fb-4f82-b174-988ee917d191 to file-based vector store
2025-08-09T21:06:50.734+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document a81800b9-c552-422b-99e1-622337503805 to file-based vector store
2025-08-09T21:06:50.734+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 813ea9c4-7edc-439a-8fd0-9848539f06d3 to file-based vector store
2025-08-09T21:06:50.735+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2968d9c4-47fd-4890-9b8c-8bc8a21a5305 to file-based vector store
2025-08-09T21:06:50.735+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 569ab138-1848-4170-ad00-0f9565870928 to file-based vector store
2025-08-09T21:06:50.735+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document e1a5a72c-de74-4f20-8a9e-4b2458cb4cdb to file-based vector store
2025-08-09T21:06:50.736+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document b5f25e10-cfda-4168-ad6a-16870893082f to file-based vector store
2025-08-09T21:06:50.736+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 21ee8707-3b91-4ba6-afe4-5c384eb46711 to file-based vector store
2025-08-09T21:06:50.736+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document caf85b70-121f-46e3-b81b-06932afd9413 to file-based vector store
2025-08-09T21:06:50.736+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 9dd48706-8788-464f-a6e6-59d79e6d6506 to file-based vector store
2025-08-09T21:06:50.737+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document c0c9aae4-ec1c-492c-97d3-36fc549e5aad to file-based vector store
2025-08-09T21:06:50.737+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 664a3806-924d-4e21-8511-4956aca883d7 to file-based vector store
2025-08-09T21:06:50.737+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 9d0fa6f1-b1ab-4be0-b451-76730b9e8198 to file-based vector store
2025-08-09T21:06:50.737+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document fd3345ce-fa5a-4b6e-a165-7ae075a5de2e to file-based vector store
2025-08-09T21:06:50.738+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 8230b289-491a-44c4-8dbe-100f58ba322a to file-based vector store
2025-08-09T21:06:50.738+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document c98270b0-6e64-4fb3-9569-c770f28bdbf2 to file-based vector store
2025-08-09T21:06:50.738+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 6b1b0eb1-46b6-402e-94ca-c7bf9c6bc643 to file-based vector store
2025-08-09T21:06:50.739+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document f3d2f1b7-8fd0-4f73-8fe2-319e4f63fe73 to file-based vector store
2025-08-09T21:06:50.739+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 8a1f4f1c-4844-434a-bec0-58c1c4f61e05 to file-based vector store
2025-08-09T21:06:50.739+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document cfa11d5c-f2ee-413e-9d18-ef44d6918775 to file-based vector store
2025-08-09T21:06:50.740+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 94a5e240-6713-4fd7-968d-926315b7d9aa to file-based vector store
2025-08-09T21:06:50.740+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 4492b275-875e-4f9e-95a9-be015771552e to file-based vector store
2025-08-09T21:06:50.740+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document ae2d6da5-e018-41b2-baec-113c3c464ab2 to file-based vector store
2025-08-09T21:06:50.740+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 7b3b6c4c-8504-40a0-bdb4-395f4f913594 to file-based vector store
2025-08-09T21:06:50.741+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 9dbf585e-f87f-4471-b3da-6bef4f59bffb to file-based vector store
2025-08-09T21:06:50.741+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document bed8acc2-b101-4819-90cd-11e0a4390d0d to file-based vector store
2025-08-09T21:06:50.741+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 97b552e7-6825-4a9e-8225-1a6336e0af22 to file-based vector store
2025-08-09T21:06:50.741+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d475d636-43f1-4c9b-bf30-d527e3df5de2 to file-based vector store
2025-08-09T21:06:50.742+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 972d0a88-541d-4d50-b87d-065cd4f32883 to file-based vector store
2025-08-09T21:06:50.742+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 0c6a4ace-6af7-4bef-aa1a-7576cf9e4c13 to file-based vector store
2025-08-09T21:06:50.742+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document b2bdd549-0fde-44c9-aece-4a9ea958428b to file-based vector store
2025-08-09T21:06:50.743+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document bf4046e5-aa71-4941-947d-fc1b86adf3d4 to file-based vector store
2025-08-09T21:06:50.743+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d4cb1475-e5c7-4769-900d-ad2f93f19e36 to file-based vector store
2025-08-09T21:06:50.743+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 49ef19b3-137f-455a-9c01-cd58c4192d5d to file-based vector store
2025-08-09T21:06:50.743+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document e5b30388-6a13-4e47-8b92-1425a3cc2b77 to file-based vector store
2025-08-09T21:06:50.744+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 1a0c3347-2c78-4006-a0b6-1b70f0d64d2c to file-based vector store
2025-08-09T21:06:50.744+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 8c4a11b1-5fd8-4a75-bb24-fcaf8841662f to file-based vector store
2025-08-09T21:06:50.744+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 5e000658-7233-41db-a1ed-d4d8fbca4838 to file-based vector store
2025-08-09T21:06:50.744+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document d8dca6f5-e1f9-416f-aed3-b2b480a04fc0 to file-based vector store
2025-08-09T21:06:50.745+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document f669d39b-49ea-4f04-8216-07be63ce44b7 to file-based vector store
2025-08-09T21:06:50.745+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2185a298-7611-4030-9beb-b519d4217189 to file-based vector store
2025-08-09T21:06:50.745+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 9ad233a1-6aea-4aad-b743-36941e26b3dd to file-based vector store
2025-08-09T21:06:50.746+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 5f88ea99-537a-4ca8-89e9-51d3ee4302e1 to file-based vector store
2025-08-09T21:06:50.746+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 4026445d-e785-498d-a4fc-ef689bc84f12 to file-based vector store
2025-08-09T21:06:50.746+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 4c8ca72e-fee4-49a6-84b2-31557f0045ac to file-based vector store
2025-08-09T21:06:50.747+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 598b430b-f165-4960-bf14-dae16185f675 to file-based vector store
2025-08-09T21:06:50.747+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2229b90c-7dc0-4b1e-b647-7fa7f1ee847f to file-based vector store
2025-08-09T21:06:50.747+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document c793dad1-d66d-4b61-8631-cea5cbb15acf to file-based vector store
2025-08-09T21:06:50.747+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document f85757dd-cd6c-4788-90a3-4ab721e9fdce to file-based vector store
2025-08-09T21:06:50.748+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document fa67471c-e67d-42d9-bfb7-6a03aa7c40be to file-based vector store
2025-08-09T21:06:50.748+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 3607135b-bcc4-420f-b586-9ee8d6c430eb to file-based vector store
2025-08-09T21:06:50.748+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 8d0baab5-5e16-43de-aa7b-a97c4b25da12 to file-based vector store
2025-08-09T21:06:50.748+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 607cfe9d-3b33-422f-bb9b-b64e4bc038e0 to file-based vector store
2025-08-09T21:06:50.749+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document e7a9d14d-8caf-472d-ae9a-d1bbf6df332c to file-based vector store
2025-08-09T21:06:50.749+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 788ec5d6-6951-4a50-ada9-7ab908923e6a to file-based vector store
2025-08-09T21:06:50.749+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document ccdbbd8a-bf9b-4bd2-aebe-4b3df87ef7fe to file-based vector store
2025-08-09T21:06:50.749+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document fe9af97e-e1c9-4905-96ab-8899c016541c to file-based vector store
2025-08-09T21:06:50.750+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document ffda252d-062c-4cd8-af79-d05c8b307e55 to file-based vector store
2025-08-09T21:06:50.750+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 2c1fde33-ce52-49a1-b2a8-90d4e1fe8881 to file-based vector store
2025-08-09T21:06:50.750+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 88460f99-5bac-4b20-b5b2-905c3b30e5ed to file-based vector store
2025-08-09T21:06:50.750+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document b0382d9f-81eb-4041-a7ee-0c8c3fa74372 to file-based vector store
2025-08-09T21:06:50.751+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document e74ac26c-c7a6-4f9d-9f37-c479353f2ff2 to file-based vector store
2025-08-09T21:06:50.751+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 3c5de2a8-77c0-4245-b37d-e9764a3ca6b1 to file-based vector store
2025-08-09T21:06:50.751+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 1a7ffb7c-4236-4864-803c-52def65a36d3 to file-based vector store
2025-08-09T21:06:50.751+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Successfully added 158 out of 158 chunks to vector database for document: 794cf47e-0195-400e-8e2f-ecb7d60eca41
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at,
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        documents d1_0 
    left join
        document_chunks c1_0 
            on d1_0.id=c1_0.document_id 
    where
        d1_0.id=?
Hibernate: 
    update
        documents 
    set
        content_hash=?,
        content_type=?,
        created_at=?,
        document_id=?,
        error_message=?,
        file_path=?,
        file_size=?,
        filename=?,
        knowledge_base_id=?,
        metadata=? format json,
        original_filename=?,
        status=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        count(d1_0.id) 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        d1_0.knowledge_base_id,
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        knowledge_bases kb1_0 
    left join
        documents d1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    where
        kb1_0.id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-09T21:06:50.775+08:00  INFO 7942 --- [genie-backend] [onPool-worker-2] c.jd.genie.service.KnowledgeBaseService  : Document vectorization completed successfully for: 794cf47e-0195-400e-8e2f-ecb7d60eca41
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.document_id=?
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=? 
    order by
        dc1_0.chunk_index
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.session_id=? 
        and cs1_0.user_id=?
Hibernate: 
    select
        cm1_0.id,
        cm1_0.session_id,
        cm1_0.content,
        cm1_0.created_at,
        cm1_0.message_order,
        cm1_0.role 
    from
        chat_messages cm1_0 
    where
        cm1_0.session_id=? 
    order by
        cm1_0.message_order
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        cs1_0.id,
        cs1_0.created_at,
        cs1_0.is_active,
        cs1_0.session_id,
        cs1_0.title,
        cs1_0.updated_at,
        cs1_0.user_id 
    from
        chat_sessions cs1_0 
    where
        cs1_0.user_id=? 
        and cs1_0.is_active 
    order by
        cs1_0.updated_at desc
Hibernate: 
    select
        m1_0.session_id,
        m1_0.id,
        m1_0.content,
        m1_0.created_at,
        m1_0.message_order,
        m1_0.role 
    from
        chat_messages m1_0 
    where
        m1_0.session_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id 
    from
        knowledge_bases kb1_0 
    where
        kb1_0.user_id=? 
        and kb1_0.name=? 
        and kb1_0.is_active=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        knowledge_bases
        (created_at, description, document_count, is_active, name, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-09T21:22:46.904+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-9] c.jd.genie.service.KnowledgeBaseService  : Starting document upload: knowledgeBaseId=2, filename=chap5.pdf, size=917375
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
        and d1_0.content_hash=?
Hibernate: 
    insert 
    into
        documents
        (content_hash, content_type, created_at, document_id, error_message, file_path, file_size, filename, knowledge_base_id, metadata, original_filename, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, ?, default)
2025-08-09T21:22:46.910+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Starting vectorization for document: 2cf7a30f-12dc-4fd0-8c99-2ffd4d6bcb0f (application/pdf)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
2025-08-09T21:22:47.028+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Skipping OCR for digital native PDF: 2cf7a30f-12dc-4fd0-8c99-2ffd4d6bcb0f
2025-08-09T21:22:47.028+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Extracting content from file: chap5.pdf with content type: application/pdf
2025-08-09T21:22:47.028+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Extracting content from PDF file: uploads/knowledge-base/5ece72c9-3500-4e73-9299-676649d7eb59_chap5.pdf
2025-08-09T21:22:47.147+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Successfully extracted 1561 characters from PDF: 5ece72c9-3500-4e73-9299-676649d7eb59_chap5.pdf
2025-08-09T21:22:47.147+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.j.g.s.SemanticTextChunkingService      : Starting semantic chunking with target size: 2000 characters, overlap: 200 characters, max table size: 4000
2025-08-09T21:22:47.148+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.j.g.s.SemanticTextChunkingService      : Semantic chunking completed: 1 chunks generated from 1 segments. Segment types: {MULTI_LINE_CONTENT=1}
2025-08-09T21:22:47.148+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Document 2cf7a30f-12dc-4fd0-8c99-2ffd4d6bcb0f split into 1 semantic chunks
Hibernate: 
    insert 
    into
        document_chunks
        (chunk_id, chunk_index, content, created_at, document_id, embedding_id, end_pos, metadata, start_pos, token_count, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, default)
Hibernate: 
    update
        document_chunks 
    set
        chunk_id=?,
        chunk_index=?,
        content=?,
        created_at=?,
        document_id=?,
        embedding_id=?,
        end_pos=?,
        metadata=? format json,
        start_pos=?,
        token_count=? 
    where
        id=?
2025-08-09T21:22:47.694+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.j.g.service.FileVectorDatabaseService  : Successfully saved document 580285f6-0a4a-4430-aa71-775585cfa628 to file-based vector store
2025-08-09T21:22:47.694+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Successfully added 1 out of 1 chunks to vector database for document: 2cf7a30f-12dc-4fd0-8c99-2ffd4d6bcb0f
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at,
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        documents d1_0 
    left join
        document_chunks c1_0 
            on d1_0.id=c1_0.document_id 
    where
        d1_0.id=?
Hibernate: 
    update
        documents 
    set
        content_hash=?,
        content_type=?,
        created_at=?,
        document_id=?,
        error_message=?,
        file_path=?,
        file_size=?,
        filename=?,
        knowledge_base_id=?,
        metadata=? format json,
        original_filename=?,
        status=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        count(d1_0.id) 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        d1_0.knowledge_base_id,
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        knowledge_bases kb1_0 
    left join
        documents d1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    where
        kb1_0.id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-09T21:22:47.703+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Document vectorization completed successfully for: 2cf7a30f-12dc-4fd0-8c99-2ffd4d6bcb0f
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.document_id=?
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=? 
    order by
        dc1_0.chunk_index
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.document_id=?
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=? 
    order by
        dc1_0.chunk_index
Hibernate: 
    select
        dc1_0.id,
        dc1_0.chunk_id,
        dc1_0.chunk_index,
        dc1_0.content,
        dc1_0.created_at,
        dc1_0.document_id,
        dc1_0.embedding_id,
        dc1_0.end_pos,
        dc1_0.metadata,
        dc1_0.start_pos,
        dc1_0.token_count 
    from
        document_chunks dc1_0 
    where
        dc1_0.document_id=?
Hibernate: 
    select
        c1_0.document_id,
        c1_0.id,
        c1_0.chunk_id,
        c1_0.chunk_index,
        c1_0.content,
        c1_0.created_at,
        c1_0.embedding_id,
        c1_0.end_pos,
        c1_0.metadata,
        c1_0.start_pos,
        c1_0.token_count 
    from
        document_chunks c1_0 
    where
        c1_0.document_id=?
Hibernate: 
    delete 
    from
        document_chunks 
    where
        id=?
Hibernate: 
    delete 
    from
        documents 
    where
        id=?
Hibernate: 
    select
        count(d1_0.id) 
    from
        documents d1_0 
    where
        d1_0.knowledge_base_id=?
2025-08-09T21:23:15.261+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-9] c.jd.genie.service.KnowledgeBaseService  : Document deleted successfully: 2cf7a30f-12dc-4fd0-8c99-2ffd4d6bcb0f
Hibernate: 
    update
        knowledge_bases 
    set
        created_at=?,
        description=?,
        document_count=?,
        is_active=?,
        name=?,
        updated_at=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
2025-08-09T21:23:27.260+08:00  INFO 7942 --- [genie-backend] [nio-8080-exec-1] c.jd.genie.service.KnowledgeBaseService  : Starting document upload: knowledgeBaseId=2, filename=Notes_on_First_Lectures V3.pdf, size=188274
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
        and d1_0.content_hash=?
Hibernate: 
    insert 
    into
        documents
        (content_hash, content_type, created_at, document_id, error_message, file_path, file_size, filename, knowledge_base_id, metadata, original_filename, status, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ? format json, ?, ?, ?, default)
2025-08-09T21:23:27.262+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Starting vectorization for document: 9b329ed1-3ba8-4092-8176-36df0d9ceec5 (application/pdf)
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
2025-08-09T21:23:27.309+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Skipping OCR for digital native PDF: 9b329ed1-3ba8-4092-8176-36df0d9ceec5
2025-08-09T21:23:27.309+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Extracting content from file: Notes_on_First_Lectures V3.pdf with content type: application/pdf
2025-08-09T21:23:27.309+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Extracting content from PDF file: uploads/knowledge-base/34dbc69b-41b0-4139-bbba-ed493f9cdd48_Notes_on_First_Lectures V3.pdf
2025-08-09T21:23:27.345+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.jd.genie.service.KnowledgeBaseService  : Successfully extracted 27460 characters from PDF: 34dbc69b-41b0-4139-bbba-ed493f9cdd48_Notes_on_First_Lectures V3.pdf
2025-08-09T21:23:27.345+08:00  INFO 7942 --- [genie-backend] [onPool-worker-3] c.j.g.s.SemanticTextChunkingService      : Starting semantic chunking with target size: 2000 characters, overlap: 200 characters, max table size: 4000
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.user_id=? 
        and kb1_0.is_active 
    order by
        kb1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        knowledge_bases kb1_0 
    join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        kb1_0.id=? 
        and kb1_0.user_id=?
Hibernate: 
    select
        d1_0.id,
        d1_0.content_hash,
        d1_0.content_type,
        d1_0.created_at,
        d1_0.document_id,
        d1_0.error_message,
        d1_0.file_path,
        d1_0.file_size,
        d1_0.filename,
        d1_0.knowledge_base_id,
        kb1_0.id,
        kb1_0.created_at,
        kb1_0.description,
        kb1_0.document_count,
        kb1_0.is_active,
        kb1_0.name,
        kb1_0.updated_at,
        kb1_0.user_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        d1_0.metadata,
        d1_0.original_filename,
        d1_0.status,
        d1_0.updated_at 
    from
        documents d1_0 
    join
        knowledge_bases kb1_0 
            on kb1_0.id=d1_0.knowledge_base_id 
    left join
        users u1_0 
            on u1_0.id=kb1_0.user_id 
    where
        d1_0.knowledge_base_id=? 
    order by
        d1_0.created_at desc
